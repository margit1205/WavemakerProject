/*Copyright (c) 2023-2024 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.e_commerce_web_app.shopingapp;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * Product generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`product`")
public class Product implements Serializable {

    private Integer id;
    private String pname;
    private String description;
    private Integer price;
    private String imageUrl;
    private Integer cateogryId;
    private Cateogry cateogry;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`id`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`p_name`", nullable = true, length = 200)
    public String getPname() {
        return this.pname;
    }

    public void setPname(String pname) {
        this.pname = pname;
    }

    @Column(name = "`description`", nullable = true, length = 10000)
    public String getDescription() {
        return this.description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    @Column(name = "`price`", nullable = true, scale = 0, precision = 10)
    public Integer getPrice() {
        return this.price;
    }

    public void setPrice(Integer price) {
        this.price = price;
    }

    @Column(name = "`image_url`", nullable = true, length = 1000)
    public String getImageUrl() {
        return this.imageUrl;
    }

    public void setImageUrl(String imageUrl) {
        this.imageUrl = imageUrl;
    }

    @Column(name = "`cateogry_id`", nullable = true, scale = 0, precision = 10)
    public Integer getCateogryId() {
        return this.cateogryId;
    }

    public void setCateogryId(Integer cateogryId) {
        this.cateogryId = cateogryId;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`cateogry_id`", referencedColumnName = "`id`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`product_ibfk_1`"))
    @Fetch(FetchMode.JOIN)
    public Cateogry getCateogry() {
        return this.cateogry;
    }

    public void setCateogry(Cateogry cateogry) {
        if(cateogry != null) {
            this.cateogryId = cateogry.getId();
        }

        this.cateogry = cateogry;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Product)) return false;
        final Product product = (Product) o;
        return Objects.equals(getId(), product.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}
/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.e_commerce_web_app.opencagedata.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.List;
/**
 * ResponseCurrency
 */

public class ResponseCurrency {
  @JsonProperty("thousands_separator")
  private String thousands_separator = null;

  @JsonProperty("symbol")
  private String symbol = null;

  @JsonProperty("alternate_symbols")
  private List<String> alternate_symbols = new ArrayList<>();

  @JsonProperty("symbol_first")
  private Integer symbol_first = null;

  @JsonProperty("subunit_to_unit")
  private Integer subunit_to_unit = null;

  @JsonProperty("html_entity")
  private String html_entity = null;

  @JsonProperty("disambiguate_symbol")
  private String disambiguate_symbol = null;

  @JsonProperty("subunit")
  private String subunit = null;

  @JsonProperty("smallest_denomination")
  private Integer smallest_denomination = null;

  @JsonProperty("decimal_mark")
  private String decimal_mark = null;

  @JsonProperty("iso_numeric")
  private String iso_numeric = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("iso_code")
  private String iso_code = null;

  public ResponseCurrency thousands_separator(String thousands_separator) {
    this.thousands_separator = thousands_separator;
    return this;
  }

   /**
   * Get thousands_separator
   * @return thousands_separator
  **/
  public String getThousandsSeparator() {
    return thousands_separator;
  }

  public void setThousandsSeparator(String thousands_separator) {
    this.thousands_separator = thousands_separator;
  }

  public ResponseCurrency symbol(String symbol) {
    this.symbol = symbol;
    return this;
  }

   /**
   * Get symbol
   * @return symbol
  **/
  public String getSymbol() {
    return symbol;
  }

  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }

  public ResponseCurrency alternate_symbols(List<String> alternate_symbols) {
    this.alternate_symbols = alternate_symbols;
    return this;
  }

  public ResponseCurrency addAlternateSymbolsItem(String alternate_symbolsItem) {
    this.alternate_symbols.add(alternate_symbolsItem);
    return this;
  }

   /**
   * Get alternate_symbols
   * @return alternate_symbols
  **/
  public List<String> getAlternateSymbols() {
    return alternate_symbols;
  }

  public void setAlternateSymbols(List<String> alternate_symbols) {
    this.alternate_symbols = alternate_symbols;
  }

  public ResponseCurrency symbol_first(Integer symbol_first) {
    this.symbol_first = symbol_first;
    return this;
  }

   /**
   * Get symbol_first
   * @return symbol_first
  **/
  public Integer getSymbolFirst() {
    return symbol_first;
  }

  public void setSymbolFirst(Integer symbol_first) {
    this.symbol_first = symbol_first;
  }

  public ResponseCurrency subunit_to_unit(Integer subunit_to_unit) {
    this.subunit_to_unit = subunit_to_unit;
    return this;
  }

   /**
   * Get subunit_to_unit
   * @return subunit_to_unit
  **/
  public Integer getSubunitToUnit() {
    return subunit_to_unit;
  }

  public void setSubunitToUnit(Integer subunit_to_unit) {
    this.subunit_to_unit = subunit_to_unit;
  }

  public ResponseCurrency html_entity(String html_entity) {
    this.html_entity = html_entity;
    return this;
  }

   /**
   * Get html_entity
   * @return html_entity
  **/
  public String getHtmlEntity() {
    return html_entity;
  }

  public void setHtmlEntity(String html_entity) {
    this.html_entity = html_entity;
  }

  public ResponseCurrency disambiguate_symbol(String disambiguate_symbol) {
    this.disambiguate_symbol = disambiguate_symbol;
    return this;
  }

   /**
   * Get disambiguate_symbol
   * @return disambiguate_symbol
  **/
  public String getDisambiguateSymbol() {
    return disambiguate_symbol;
  }

  public void setDisambiguateSymbol(String disambiguate_symbol) {
    this.disambiguate_symbol = disambiguate_symbol;
  }

  public ResponseCurrency subunit(String subunit) {
    this.subunit = subunit;
    return this;
  }

   /**
   * Get subunit
   * @return subunit
  **/
  public String getSubunit() {
    return subunit;
  }

  public void setSubunit(String subunit) {
    this.subunit = subunit;
  }

  public ResponseCurrency smallest_denomination(Integer smallest_denomination) {
    this.smallest_denomination = smallest_denomination;
    return this;
  }

   /**
   * Get smallest_denomination
   * @return smallest_denomination
  **/
  public Integer getSmallestDenomination() {
    return smallest_denomination;
  }

  public void setSmallestDenomination(Integer smallest_denomination) {
    this.smallest_denomination = smallest_denomination;
  }

  public ResponseCurrency decimal_mark(String decimal_mark) {
    this.decimal_mark = decimal_mark;
    return this;
  }

   /**
   * Get decimal_mark
   * @return decimal_mark
  **/
  public String getDecimalMark() {
    return decimal_mark;
  }

  public void setDecimalMark(String decimal_mark) {
    this.decimal_mark = decimal_mark;
  }

  public ResponseCurrency iso_numeric(String iso_numeric) {
    this.iso_numeric = iso_numeric;
    return this;
  }

   /**
   * Get iso_numeric
   * @return iso_numeric
  **/
  public String getIsoNumeric() {
    return iso_numeric;
  }

  public void setIsoNumeric(String iso_numeric) {
    this.iso_numeric = iso_numeric;
  }

  public ResponseCurrency name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ResponseCurrency iso_code(String iso_code) {
    this.iso_code = iso_code;
    return this;
  }

   /**
   * Get iso_code
   * @return iso_code
  **/
  public String getIsoCode() {
    return iso_code;
  }

  public void setIsoCode(String iso_code) {
    this.iso_code = iso_code;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResponseCurrency Response_currency = (ResponseCurrency) o;
    return Objects.equals(this.thousands_separator, Response_currency.thousands_separator) &&
        Objects.equals(this.symbol, Response_currency.symbol) &&
        Objects.equals(this.alternate_symbols, Response_currency.alternate_symbols) &&
        Objects.equals(this.symbol_first, Response_currency.symbol_first) &&
        Objects.equals(this.subunit_to_unit, Response_currency.subunit_to_unit) &&
        Objects.equals(this.html_entity, Response_currency.html_entity) &&
        Objects.equals(this.disambiguate_symbol, Response_currency.disambiguate_symbol) &&
        Objects.equals(this.subunit, Response_currency.subunit) &&
        Objects.equals(this.smallest_denomination, Response_currency.smallest_denomination) &&
        Objects.equals(this.decimal_mark, Response_currency.decimal_mark) &&
        Objects.equals(this.iso_numeric, Response_currency.iso_numeric) &&
        Objects.equals(this.name, Response_currency.name) &&
        Objects.equals(this.iso_code, Response_currency.iso_code);
  }

  @Override
  public int hashCode() {
    return Objects.hash(thousands_separator, symbol, alternate_symbols, symbol_first, subunit_to_unit, html_entity, disambiguate_symbol, subunit, smallest_denomination, decimal_mark, iso_numeric, name, iso_code);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResponseCurrency {\n");
    
    sb.append("    thousands_separator: ").append(toIndentedString(thousands_separator)).append("\n");
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    alternate_symbols: ").append(toIndentedString(alternate_symbols)).append("\n");
    sb.append("    symbol_first: ").append(toIndentedString(symbol_first)).append("\n");
    sb.append("    subunit_to_unit: ").append(toIndentedString(subunit_to_unit)).append("\n");
    sb.append("    html_entity: ").append(toIndentedString(html_entity)).append("\n");
    sb.append("    disambiguate_symbol: ").append(toIndentedString(disambiguate_symbol)).append("\n");
    sb.append("    subunit: ").append(toIndentedString(subunit)).append("\n");
    sb.append("    smallest_denomination: ").append(toIndentedString(smallest_denomination)).append("\n");
    sb.append("    decimal_mark: ").append(toIndentedString(decimal_mark)).append("\n");
    sb.append("    iso_numeric: ").append(toIndentedString(iso_numeric)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    iso_code: ").append(toIndentedString(iso_code)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

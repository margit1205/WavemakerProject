/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.e_commerce_web_app.opencagedata.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
/**
 * ResponseTimezone
 */

public class ResponseTimezone {
  @JsonProperty("name")
  private String name = null;

  @JsonProperty("now_in_dst")
  private Integer now_in_dst = null;

  @JsonProperty("short_name")
  private String short_name = null;

  @JsonProperty("offset_sec")
  private Integer offset_sec = null;

  @JsonProperty("offset_string")
  private String offset_string = null;

  public ResponseTimezone name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ResponseTimezone now_in_dst(Integer now_in_dst) {
    this.now_in_dst = now_in_dst;
    return this;
  }

   /**
   * Get now_in_dst
   * @return now_in_dst
  **/
  public Integer getNowInDst() {
    return now_in_dst;
  }

  public void setNowInDst(Integer now_in_dst) {
    this.now_in_dst = now_in_dst;
  }

  public ResponseTimezone short_name(String short_name) {
    this.short_name = short_name;
    return this;
  }

   /**
   * Get short_name
   * @return short_name
  **/
  public String getShortName() {
    return short_name;
  }

  public void setShortName(String short_name) {
    this.short_name = short_name;
  }

  public ResponseTimezone offset_sec(Integer offset_sec) {
    this.offset_sec = offset_sec;
    return this;
  }

   /**
   * Get offset_sec
   * @return offset_sec
  **/
  public Integer getOffsetSec() {
    return offset_sec;
  }

  public void setOffsetSec(Integer offset_sec) {
    this.offset_sec = offset_sec;
  }

  public ResponseTimezone offset_string(String offset_string) {
    this.offset_string = offset_string;
    return this;
  }

   /**
   * Get offset_string
   * @return offset_string
  **/
  public String getOffsetString() {
    return offset_string;
  }

  public void setOffsetString(String offset_string) {
    this.offset_string = offset_string;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResponseTimezone Response_timezone = (ResponseTimezone) o;
    return Objects.equals(this.name, Response_timezone.name) &&
        Objects.equals(this.now_in_dst, Response_timezone.now_in_dst) &&
        Objects.equals(this.short_name, Response_timezone.short_name) &&
        Objects.equals(this.offset_sec, Response_timezone.offset_sec) &&
        Objects.equals(this.offset_string, Response_timezone.offset_string);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, now_in_dst, short_name, offset_sec, offset_string);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResponseTimezone {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    now_in_dst: ").append(toIndentedString(now_in_dst)).append("\n");
    sb.append("    short_name: ").append(toIndentedString(short_name)).append("\n");
    sb.append("    offset_sec: ").append(toIndentedString(offset_sec)).append("\n");
    sb.append("    offset_string: ").append(toIndentedString(offset_string)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

/*Copyright (c) 2023-2024 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.e_commerce_web_app.shopingapp;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * Cartitem generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`cartitem`")
public class Cartitem implements Serializable {

    private Integer id;
    private Integer cartId;
    private Integer productId;
    private Integer quantity;
    private Cart cart;
    private Product product;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`id`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`cart_id`", nullable = true, scale = 0, precision = 10)
    public Integer getCartId() {
        return this.cartId;
    }

    public void setCartId(Integer cartId) {
        this.cartId = cartId;
    }

    @Column(name = "`product_id`", nullable = true, scale = 0, precision = 10)
    public Integer getProductId() {
        return this.productId;
    }

    public void setProductId(Integer productId) {
        this.productId = productId;
    }

    @Column(name = "`quantity`", nullable = true, scale = 0, precision = 10)
    public Integer getQuantity() {
        return this.quantity;
    }

    public void setQuantity(Integer quantity) {
        this.quantity = quantity;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`cart_id`", referencedColumnName = "`id`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`FK_cartitem_TO_cart_cartXlTJX`"))
    @Fetch(FetchMode.JOIN)
    public Cart getCart() {
        return this.cart;
    }

    public void setCart(Cart cart) {
        if(cart != null) {
            this.cartId = cart.getId();
        }

        this.cart = cart;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`product_id`", referencedColumnName = "`id`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`FK_cartitem_TO_product_p2z1gQ`"))
    @Fetch(FetchMode.JOIN)
    public Product getProduct() {
        return this.product;
    }

    public void setProduct(Product product) {
        if(product != null) {
            this.productId = product.getId();
        }

        this.product = product;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Cartitem)) return false;
        final Cartitem cartitem = (Cartitem) o;
        return Objects.equals(getId(), cartitem.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}